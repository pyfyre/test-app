__BRYTHON__.use_VFS = true;
var scripts = {"$timestamp": 1643447311616, "pyf_modules.pyfyre": [".py", "from browser import document\n\ndef runApp(app,mount=\"app-mount\"):\n body=document.getElementById(mount)\n body.innerHTML=\"\"\n body.appendChild(app.build().dom())\n", ["browser"]], "pyf_modules": [".py", "", [], 1], "pyf_modules.ajax": [".py", "from browser import ajax\n\n\nclass Ajax:\n def get(url,then):\n  req=ajax.ajax()\n  req.open('GET',url,True )\n  req.bind('complete',then)\n  req.set_header('content-type','application/x-www-form-urlencoded')\n  req.send()\n", ["browser"], 1], "pyf_modules.widgets": [".py", "\nfrom pyf_modules.pyfyre import runApp\n\n\nfrom browser import document\n\nclass PyFyreApp:\n\n def build(self):\n  pass\n  \n def update(self):\n  runApp(self)\n  \nclass Widget:\n\n def __init__(self,tagname:str,*,className,props=None ):\n  self.tagname=tagname\n  self.className=className\n  self.props=props if props is not None else {}\n  \n def dom(self):\n  element=document.createElement(self.tagname)\n  element.className=self.className\n  \n  for key,value in self.props.items():\n   element.attrs[key]=value\n   \n  return element\n  \nclass Container(Widget):\n\n def __init__(self,*,children,onClick=lambda :print(\"Click!\"),className,props=None ):\n  super().__init__(\"div\",className=className,props=props)\n  self.children=children\n  self.onClick=onClick\n  \n def dom(self):\n  element=super().dom()\n  \n  if self.onClick is not None :\n   element.bind(\"click\",self.onClick)\n   \n  for child in self.children:\n   element.appendChild(child.dom())\n   \n  return element\n  \nclass Button(Widget):\n\n def __init__(self,*,textContent:str=\"Button\",onClick=lambda :print(\"Click!\"),className,props):\n  super().__init__(\"button\",className=className,props=props)\n  self.textContent=textContent\n  self.onClick=onClick\n  \n def dom(self):\n  element=super().dom()\n  element.textContent=self.textContent\n  \n  if self.onClick is not None :\n   element.bind(\"click\",self.onClick)\n   \n  return element\n  \nclass Anchor(Widget):\n\n def __init__(self,*,textContent:str=\"Anchor\",onClick=lambda :print(\"Click!\"),link:str=\"#\",className,props=None ):\n  super().__init__(\"a\",className=className,props=props)\n  self.textContent=textContent\n  self.onClick=onClick\n  self.link=link\n  \n def dom(self):\n  element=super().dom()\n  element.textContent=self.textContent\n  element.href=self.link\n  \n  if self.onClick is not None :\n   element.bind(\"click\",self.onClick)\n   \n  return element\n  \nclass Text(Widget):\n\n def __init__(self,*,textContent:str=\"Anchor\",onClick=lambda :print(\"Click!\"),className,props=None ):\n  super().__init__(\"p\",className=className,props=props)\n  self.textContent=textContent\n  self.onClick=onClick\n  \n def dom(self):\n  element=super().dom()\n  element.textContent=self.textContent\n  \n  if self.onClick is not None :\n   element.bind(\"click\",self.onClick)\n   \n  return element\n  \n  \nclass Image(Widget):\n\n def __init__(self,*,src,onClick=lambda :print(\"Click!\"),className,props=None ):\n  super().__init__(\"img\",className=className,props=props)\n  self.src=src\n  self.onClick=onClick\n  \n def dom(self):\n  element=super().dom()\n  element.src=self.src\n  \n  if self.onClick is not None :\n   element.bind(\"click\",self.onClick)\n   \n  return element\n  \nclass Link(Widget):\n\n def __init__(self,*,textContent:str=\"Anchor\",page:Widget,className,props=None ):\n  super().__init__(\"a\",className=className,props=props)\n  self.textContent=textContent\n  self.page=page\n  \n def dom(self):\n  element=super().dom()\n  element.textContent=self.textContent\n  element.href=\"#\"\n  \n  element.bind(\"click\",self.navigate)\n  \n  return element\n  \n def navigate(self,e):\n  runApp(self.page())\n", ["browser", "pyf_modules.pyfyre"], 1]}
__BRYTHON__.update_VFS(scripts)
